services:
  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile.dev
    command: npm run start -- --host 0.0.0.0 --port 4200 --poll 2000
    environment:
      CHOKIDAR_USEPOLLING: "1"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./fe:/app
      - /app/node_modules
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.dev
    volumes:
      - ./gateway:/app
      - /app/node_modules
    depends_on:
      - auth-service
      - note-service
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/auth:/app
      - /app/node_modules
    environment:
      POSTGRES_HOST: db-sql
      POSTGRES_PORT: 5432
      MONGO_HOST: db-nosql
      MONGO_PORT: 27017

  note-service:
    build:
      context: ./services/note
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/note:/app
      - /app/node_modules
    environment:
      POSTGRES_HOST: db-sql
      POSTGRES_PORT: 5432
      MONGO_HOST: db-nosql
      MONGO_PORT: 27017

  db-sql:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - db_sql_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  db-nosql:
    image: mongo:7
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - db_nosql_data:/data/db
      - ./database/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - frontend
      - gateway
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro

volumes:
  db_sql_data:
  db_nosql_data:
