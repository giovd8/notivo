services:
  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile.dev
    command: npm run start -- --host 0.0.0.0 --port 4200 --poll 2000
    environment:
      CHOKIDAR_USEPOLLING: "1"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./fe:/app
      - /app/node_modules
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.dev
    volumes:
      - ./gateway:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      JWT_ACCESS_SECRET: dev-access-secret
      AUTH_SERVICE_URL: http://auth-service:3001
      USERS_SERVICE_URL: http://users-service:3002
      NOTES_SERVICE_URL: http://notes-service:3003
      CORS_ORIGIN: https://localhost
    depends_on:
      - auth-service
      - users-service
      - notes-service
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/auth:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      JWT_ACCESS_SECRET: dev-access-secret
      JWT_REFRESH_SECRET: dev-refresh-secret
      USERS_SERVICE_URL: http://users-service:3002
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo

      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: user
      MONGO_PASSWORD: pass
      MONGO_DB: notivo
      MONGO_AUTH_SOURCE: admin
    depends_on:
      - postgres
      - mongo
  users-service:
    build:
      context: ./services/users
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/users:/app
      - /app/node_modules
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: user
      MONGO_PASSWORD: pass
      MONGO_DB: notivo
      MONGO_AUTH_SOURCE: admin
    depends_on:
      - postgres
      - mongo
  notes-service:
    build:
      context: ./services/notes
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/notes:/app
      - /app/node_modules
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo

      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: user
      MONGO_PASSWORD: pass
      MONGO_DB: notivo
      MONGO_AUTH_SOURCE: admin
    depends_on:
      - postgres
      - mongo
    
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  mongo:
    image: mongo:7
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo_data:/data/db
      - ./database/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - frontend
      - gateway
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro

volumes:
  postgres_data:
  mongo_data:
