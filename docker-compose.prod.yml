services:
  nginx:
    image: staticfloat/nginx-certbot:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      CERTBOT_EMAIL: "giovanni_vidotto@hotmail.it"
      CERTBOT_DOMAINS: "notivo.giovannividotto.it"
      CERTBOT_STAGING: "0"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/user.conf.d/nginx.conf:ro
      - nginx_secrets:/var/lib/letsencrypt
    depends_on:
      - frontend
      - gateway

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    image: notivo-frontend:prod
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      retries: 3

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.prod
    image: notivo-gateway:prod
    environment:
      - NODE_ENV=production
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USERS_SERVICE_URL=http://users-service:3002
      - NOTES_SERVICE_URL=http://notes-service:3003
      - CORS_ORIGIN=https://${FRONTEND_DOMAIN}
      - FRONTEND_DOMAIN=notivo.giovannividotto.it
    volumes:
      - ./gateway/swagger.yaml:/app/swagger.yaml:ro
    depends_on:
      - auth-service
      - users-service
      - notes-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      retries: 3

  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile.prod
    image: notivo-auth:prod
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file: .env
    depends_on:
      - postgres
      - mongo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      retries: 3

  users-service:
    build:
      context: ./services/users
      dockerfile: Dockerfile.prod
    image: notivo-users:prod
    environment:
      - NODE_ENV=production
      - PORT=3002
    env_file: .env
    depends_on:
      - postgres
      - mongo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      retries: 3

  notes-service:
    build:
      context: ./services/notes
      dockerfile: Dockerfile.prod
    image: notivo-notes:prod
    environment:
      - NODE_ENV=production
      - PORT=3003
    env_file: .env
    depends_on:
      - postgres
      - mongo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      retries: 3

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      retries: 5

  mongo:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo_data:/data/db
      - ./database/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mongo --username $MONGO_USER --password $MONGO_PASSWORD --eval 'db.adminCommand(\"ping\")'"]
      interval: 30s
      retries: 5

volumes:
  postgres_data:
  mongo_data:
  nginx_secrets:
