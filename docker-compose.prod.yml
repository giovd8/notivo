services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    image: notivo-frontend:prod
    environment:
      - NODE_ENV=production
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.prod
    image: notivo-gateway:prod
    environment:
      NODE_ENV: production
      JWT_ACCESS_SECRET: notivo-accesss
      AUTH_SERVICE_URL: http://auth-service:3001
      USERS_SERVICE_URL: http://users-service:3002
      NOTES_SERVICE_URL: http://notes-service:3003
      CORS_ORIGIN: https://notivo.giovannividotto.it
    depends_on:
      - auth-service
      - users-service
      - notes-service
    volumes:
      - ./gateway/swagger.yaml:/app/swagger.yaml:ro
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile.prod
    image: notivo-auth:prod
    environment:
      NODE_ENV: production
      JWT_ACCESS_SECRET: notivo-access
      JWT_REFRESH_SECRET: notivo-refresh
      USERS_SERVICE_URL: http://users-service:3002
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: user
      MONGO_PASSWORD: pass
      MONGO_DB: notivo
      MONGO_AUTH_SOURCE: admin
    depends_on:
      - postgres
      - mongo
  users-service:
    build:
      context: ./services/users
      dockerfile: Dockerfile.prod
    image: notivo-users:prod
    environment:
      NODE_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: user
      MONGO_PASSWORD: pass
      MONGO_DB: notivo
      MONGO_AUTH_SOURCE: admin
    depends_on:
      - postgres
      - mongo
  notes-service:
    build:
      context: ./services/notes
      dockerfile: Dockerfile.prod
    image: notivo-notes:prod
    environment:
      NODE_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: user
      MONGO_PASSWORD: pass
      MONGO_DB: notivo
      MONGO_AUTH_SOURCE: admin
    depends_on:
      - postgres
      - mongo
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: notivo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  mongo:
    image: mongo:7
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo_data:/data/db
      - ./database/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - frontend
      - gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    pid: "service:nginx"
    volumes:
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; \
      if [ ! -f /etc/letsencrypt/live/notivo.giovannividotto.it/fullchain.pem ]; then \
        certbot certonly --webroot -w /var/www/certbot -d notivo.giovannividotto.it --email you@example.com --agree-tos --non-interactive; \
      fi; \
      while :; do certbot renew --webroot -w /var/www/certbot --quiet --no-self-upgrade && kill -HUP 1; sleep 12h; done"

volumes:
  postgres_data:
  mongo_data:
  certbot-webroot:
  letsencrypt:
